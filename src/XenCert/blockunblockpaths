#!/usr/bin/env python3
#
# Copyright (c) 2005-2022 Citrix Systems Inc.
# Copyright (c) 2022-2023 Cloud Software Group, Inc.
#
# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU Lesser General Public License as published 
# by the Free Software Foundation; version 2.1 only.
#
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#
# This utility should be called as:
# blockunblockpaths block/unblock <script to block paths> <passthrough information>
# This script puts a flag on xenstore and then
# either runs the script mentioned with the block/unblock flag and the passthrough
#     information, then waits until the xenstore flag is set.
# or just waits till the flag is set. 

import sys
sys.path.append("/opt/xensource/debug/XenCert/sm")
import utils
import xen.lowlevel.xs
import os
import time
from XenCertLog import printout, xencert_print


def help():
    printout("Usage: blockunblockpaths <blockunblockscript> <block/unblock> <noOfPaths> <passthrough-information>")
    sys.exit(-1)

# Test Cmdline args
xencert_print("Entering blockunblockpaths")
if len(sys.argv) != 5 and len(sys.argv) != 1 :
    help()

retVal = ''
xs_handle = xen.lowlevel.xs.xs()
xs_handle.write('', '/xencert/block-unblock-over', '0')
block_unblock_over = xs_handle.read('', '/xencert/block-unblock-over')
if len(sys.argv) == 5:
    cmd = [sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4]]
    xencert_print('blockunblockpaths - now call %s and wait for block/unblock to finish.' % cmd)
    (rc, stdout, stderr) = utils.execSSH(cmd, '')
    retVal = stdout if rc == 0 else stderr
elif len(sys.argv) == 1:
    xencert_print('blockunblockpaths - called without any arguments, just wait for block/unblock to finish.')

while block_unblock_over.decode() != '1':
    time.sleep(1)
    block_unblock_over = xs_handle.read('', '/xencert/block-unblock-over')

os.system('xenstore-rm /xencert')
del xs_handle
sys.stdout.write(retVal)    
sys.exit(0)
